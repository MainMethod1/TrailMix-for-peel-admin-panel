<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="adcaac93-3b29-4130-8a28-6e32da1c601b" name="Parth@D4RK 2014-04-13 23:48:52" runUser="D4RK\Parth" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Default Test Settings" id="13ee4a87-cd9b-4702-80c7-5e6ed9eda25f">
    <Deployment runDeploymentRoot="Parth_D4RK 2014-04-13 23_48_52">
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.Web.Infrastructure.1.0.0.0\lib\net40\Microsoft.Web.Infrastructure.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\EntityFramework.6.1.0\lib\net45\EntityFramework.SqlServer.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.AspNet.WebPages.3.1.2\lib\net45\System.Web.WebPages.Razor.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\Lab7\bin\Lab7.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.AspNet.WebPages.3.1.2\lib\net45\System.Web.WebPages.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\EntityFramework.6.1.0\lib\net45\EntityFramework.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.AspNet.Razor.3.1.2\lib\net45\System.Web.Razor.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.AspNet.WebPages.3.1.2\lib\net45\System.Web.WebPages.Deployment.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.AspNet.Mvc.5.1.2\lib\net45\System.Web.Mvc.dll" />
      <DeploymentItem filename="C:\Users\Parth\Documents\Visual Studio 2013\Projects\Lab7\packages\Microsoft.AspNet.WebPages.3.1.2\lib\net45\System.Web.Helpers.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Properties />
  </TestSettings>
  <Times creation="2014-04-13T23:48:52.4843663-04:00" queuing="2014-04-13T23:48:52.9797875-04:00" start="2014-04-13T23:48:53.0908937-04:00" finish="2014-04-13T23:59:31.2556651-04:00" />
  <ResultSummary outcome="Warning">
    <Counters total="1" executed="1" passed="0" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="1" inProgress="0" pending="0" />
    <RunInfos>
      <RunInfo computerName="D4RK" outcome="Warning" timestamp="2014-04-13T23:48:52.9797875-04:00">
        <Text>Warning: Test Run deployment issue: The assembly or module 'WebGrease' directly or indirectly referenced by the test container 'c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\bin\release\trailmixadmintest.dll' was not found.</Text>
      </RunInfo>
    </RunInfos>
    <ResultFiles>
      <ResultFile path="b090b7e2-0c07-463b-8ebf-42827cfbfea3\D4RK\CodedUITestMethod1.png" />
    </ResultFiles>
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="CodedUITestMethod1" storage="c:\users\parth\documents\visual studio 2013\projects\lab7\codeduitestproject\bin\release\codeduitestproject.dll" id="ce93a571-9a28-213e-898b-36e75210af31">
      <TestMethod codeBase="C:/Users/Parth/Documents/Visual Studio 2013/Projects/Lab7/CodedUITestProject/bin/Release/CodedUITestProject.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="CodedUITestProject.CodedUITest2, CodedUITestProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="CodedUITestMethod1" />
      <Extension>Microsoft.VisualStudio.TestTools.UITesting.CodedUITestAttribute, Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Extension>
    </UnitTest>
    <WebTest name="WebTest1" storage="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\webtest1.webtest" id="9e2331ba-7d51-42ee-ab09-a187c8f4d2eb" persistedWebTest="">
    </WebTest>
    <UnitTest name="TestMethod1" storage="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\bin\release\trailmixadmintest.dll" id="48681be4-01ca-f02d-5ae1-45ef749ad594">
      <TestMethod codeBase="C:/Users/Parth/Documents/Visual Studio 2013/Projects/Lab7/TrailMixAdminTest/bin/Release/TrailMixAdminTest.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TrailMixAdminTest.UnitTest1, TrailMixAdminTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestMethod1" />
    </UnitTest>
    <UnitTest name="IndexTest" storage="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\bin\release\trailmixadmintest.dll" id="f7406c51-aff2-3005-4e2c-555be7574a8e">
      <TestMethod codeBase="C:/Users/Parth/Documents/Visual Studio 2013/Projects/Lab7/TrailMixAdminTest/bin/Release/TrailMixAdminTest.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Lab7.Controllers.Tests.UnitTest1, TrailMixAdminTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="IndexTest" />
    </UnitTest>
    <WebTest name="WebTest2" storage="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\webtest2.webtest" id="f6f020f4-f082-405e-bfa7-a86699b46e8c" persistedWebTest="77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPFdlYlRlc3QgTmFtZT0iV2ViVGVzdDIiIElkPSJmNmYwMjBmNC1mMDgyLTQwNWUtYmZhNy1hODY2OTliNDZlOGMiIE93bmVyPSIiIFByaW9yaXR5PSIyMTQ3NDgzNjQ3IiBFbmFibGVkPSJUcnVlIiBDc3NQcm9qZWN0U3RydWN0dXJlPSIiIENzc0l0ZXJhdGlvbj0iIiBUaW1lb3V0PSIwIiBXb3JrSXRlbUlkcz0iIiB4bWxucz0iaHR0cDovL21pY3Jvc29mdC5jb20vc2NoZW1hcy9WaXN1YWxTdHVkaW8vVGVhbVRlc3QvMjAxMCIgRGVzY3JpcHRpb249IiIgQ3JlZGVudGlhbFVzZXJOYW1lPSIiIENyZWRlbnRpYWxQYXNzd29yZD0iIiBQcmVBdXRoZW50aWNhdGU9IlRydWUiIFByb3h5PSJkZWZhdWx0IiBTdG9wT25FcnJvcj0iRmFsc2UiIFJlY29yZGVkUmVzdWx0RmlsZT0iV2ViVGVzdDIuNmZlODJkYmQtZTlmZS00MDllLTgyNTAtYWM5Mzg2YTg4NmM4LnJlYy53ZWJ0ZXN0cmVzdWx0IiBSZXN1bHRzTG9jYWxlPSIiPg0KICA8SXRlbXM+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9ImRkOTFlMDcxLWYzYzktNDk4OC05NTRlLTU1MmViYTE4ZGNiOCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS8iIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiIC8+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJlMzA1MjhkZS0wZDk5LTQxNTMtOWRiYi0zMjgzMGQ1OTliNzEiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE1NDM5L2YwZmIyN2RiMDM5ODQ0ZjQ4OTE2ZTQ3MDM1ZjViMDhkL2FydGVyeVNpZ25hbFIvbmVnb3RpYXRlIiBUaGlua1RpbWU9IjUiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDoxNDcxLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjbGllbnRQcm90b2NvbCIgVmFsdWU9IjEuMyIgUmVjb3JkZWRWYWx1ZT0iMS4zIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc0NDYzOTYyNDQiIFJlY29yZGVkVmFsdWU9IjEzOTc0NDYzOTYyNDQiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSI5YmM0NThlZC1iYTBlLTRmOWItODQ5OC1mYTUzNmFiYzg5NDIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvQWNjb3VudC9Mb2dpbiIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDoxNDcxLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxFeHRyYWN0aW9uUnVsZXM+DQogICAgICAgIDxFeHRyYWN0aW9uUnVsZSBDbGFzc25hbWU9Ik1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uVGVzdFRvb2xzLldlYlRlc3RpbmcuUnVsZXMuRXh0cmFjdEhpZGRlbkZpZWxkcywgTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5RdWFsaXR5VG9vbHMuV2ViVGVzdEZyYW1ld29yaywgVmVyc2lvbj0xMC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhIiBWYXJpYWJsZU5hbWU9IjEiIERpc3BsYXlOYW1lPSJFeHRyYWN0IEhpZGRlbiBGaWVsZHMiIERlc2NyaXB0aW9uPSJFeHRyYWN0IGFsbCBoaWRkZW4gZmllbGRzIGZyb20gdGhlIHJlc3BvbnNlIGFuZCBwbGFjZSB0aGVtIGludG8gdGhlIHRlc3QgY29udGV4dC4iPg0KICAgICAgICAgIDxSdWxlUGFyYW1ldGVycz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlJlcXVpcmVkIiBWYWx1ZT0iVHJ1ZSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9Ikh0bWxEZWNvZGUiIFZhbHVlPSJUcnVlIiAvPg0KICAgICAgICAgIDwvUnVsZVBhcmFtZXRlcnM+DQogICAgICAgIDwvRXh0cmFjdGlvblJ1bGU+DQogICAgICA8L0V4dHJhY3Rpb25SdWxlcz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9ImRkMzFiY2MyLTMzY2ItNGQyYS1iNzI1LTc0NzIyMTM3ZWU0NSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTU0MzkvZjBmYjI3ZGIwMzk4NDRmNDg5MTZlNDcwMzVmNWIwOGQvYXJ0ZXJ5U2lnbmFsUi9jb25uZWN0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJ3ZWJTb2NrZXRzIiBSZWNvcmRlZFZhbHVlPSJ3ZWJTb2NrZXRzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBNHZqaVRrMDN1MGU4SEdSaEZtb3ZEUUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEdU1NUmkyQmxacmd1U0thSXVKTkJqcE9pQzh0TDdZMmVoaHFRUEJsOXNHQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ2dyeUZHNUd5M2VycEFjRjFtRDBkZGZiTDh1MmlNMmUxWVpadkpBUVZSQWpBQUFBQmNDZjlHTFZMNk12TDVHUklvOU5pRXB2am9uUDJFY1NVODhKYzVHOFBLb3RlZnE1N3Zib1FSb3lNRWpGN1NTNGxBQUFBQVpUUENIQTcyV2FsaHo5NENVU3NyYmhYZ1d3bk9LVWtiQVZyV3JUWTIlMkYzZ2pTb3NyWWJqN3BwZEdBJTJGeHNZcWZidmN6dUZzJTJCYmMlMkY5NnA4NG43ajBVN1ElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQTR2amlUazAzdTBlOEhHUmhGbW92RFFBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHVNTVJpMkJsWnJndVNLYUl1Sk5CanBPaUM4dEw3WTJlaGhxUVBCbDlzR0FBQUFBQU9nQUFBQUFJQUFDQUFBQUNncnlGRzVHeTNlcnBBY0YxbUQwZGRmYkw4dTJpTTJlMVlaWnZKQVFWUkFqQUFBQUJjQ2Y5R0xWTDZNdkw1R1JJbzlOaUVwdmpvblAyRWNTVTg4SmM1RzhQS290ZWZxNTd2Ym9RUm95TUVqRjdTUzRsQUFBQUFaVFBDSEE3MldhbGh6OTRDVVNzcmJoWGdXd25PS1VrYkFWcldyVFkyJTJGM2dqU29zclliajdwcGRHQSUyRnhzWXFmYnZjenVGcyUyQmJjJTJGOTZwODRuN2owVTdRJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBMTQ3MSUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMCIgUmVjb3JkZWRWYWx1ZT0iMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iMjQxZWRjMWYtYzhiYy00OTliLTk1NDgtNDRhY2Y0NDlmOTQyIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNDcxL19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvNGYyOTYyMjFhMmQ2NDM4M2FiNmU4MzJiYjQ1ZWRmMzciIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0iYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJYLVJlcXVlc3RlZC1XaXRoIiBWYWx1ZT0iWE1MSHR0cFJlcXVlc3QiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMjQ5ODk2YWMtMTcwMS00ZDMwLTlkOTYtZWQ0MDkxNmM3NzJjIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNTQzOS9mMGZiMjdkYjAzOTg0NGY0ODkxNmU0NzAzNWY1YjA4ZC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9IndlYlNvY2tldHMiIFJlY29yZGVkVmFsdWU9IndlYlNvY2tldHMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUE0dmppVGswM3UwZThIR1JoRm1vdkRRQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUR1TU1SaTJCbFpyZ3VTS2FJdUpOQmpwT2lDOHRMN1kyZWhocVFQQmw5c0dBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDZ3J5Rkc1R3kzZXJwQWNGMW1EMGRkZmJMOHUyaU0yZTFZWlp2SkFRVlJBakFBQUFCY0NmOUdMVkw2TXZMNUdSSW85TmlFcHZqb25QMkVjU1U4OEpjNUc4UEtvdGVmcTU3dmJvUVJveU1FakY3U1M0bEFBQUFBWlRQQ0hBNzJXYWxoejk0Q1VTc3JiaFhnV3duT0tVa2JBVnJXclRZMiUyRjNnalNvc3JZYmo3cHBkR0ElMkZ4c1lxZmJ2Y3p1RnMlMkJiYyUyRjk2cDg0bjdqMFU3USUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBNHZqaVRrMDN1MGU4SEdSaEZtb3ZEUUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEdU1NUmkyQmxacmd1U0thSXVKTkJqcE9pQzh0TDdZMmVoaHFRUEJsOXNHQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ2dyeUZHNUd5M2VycEFjRjFtRDBkZGZiTDh1MmlNMmUxWVpadkpBUVZSQWpBQUFBQmNDZjlHTFZMNk12TDVHUklvOU5pRXB2am9uUDJFY1NVODhKYzVHOFBLb3RlZnE1N3Zib1FSb3lNRWpGN1NTNGxBQUFBQVpUUENIQTcyV2FsaHo5NENVU3NyYmhYZ1d3bk9LVWtiQVZyV3JUWTIlMkYzZ2pTb3NyWWJqN3BwZEdBJTJGeHNZcWZidmN6dUZzJTJCYmMlMkY5NnA4NG43ajBVN1ElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iOTYwY2Y5NTMtMWExYi00NjQ3LTkzMGEtYTkxMjM3MzAxZTFiIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNTQzOS9mMGZiMjdkYjAzOTg0NGY0ODkxNmU0NzAzNWY1YjA4ZC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSIxMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjbGllbnRQcm90b2NvbCIgVmFsdWU9IjEuMyIgUmVjb3JkZWRWYWx1ZT0iMS4zIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc0NDY0MDMwODAiIFJlY29yZGVkVmFsdWU9IjEzOTc0NDY0MDMwODAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iYjVjNGQzM2EtYWI4Ny00ZmViLTg5MmEtYzJmMjE4ZGUwMjAxIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNDcxL0FjY291bnQvTG9naW4iIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS8iIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iX19SZXF1ZXN0VmVyaWZpY2F0aW9uVG9rZW4iIFZhbHVlPSJ7eyRISURERU4xLl9fUmVxdWVzdFZlcmlmaWNhdGlvblRva2VufX0iIFJlY29yZGVkVmFsdWU9Im51YURyR3B3REVyc1hCWTU4QjRqMTBLMmxIVVNoTHdjM0VmMzYwRkNHVGFBbU16VXR2ejY4S0tSR0NoX1prSmtldFZZX2EyVjcyVXZQazNnRHFUdnZkUjQ5UTlYS0R5cEtGY0NhN1VRSnAwMSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IlVzZXJOYW1lIiBWYWx1ZT0iYWRtaW4iIFJlY29yZGVkVmFsdWU9ImFkbWluIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iUGFzc3dvcmQiIFZhbHVlPSJzaGF3c2hhbmsiIFJlY29yZGVkVmFsdWU9InNoYXdzaGFuayIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IlJlbWVtYmVyTWUiIFZhbHVlPSJ7eyRISURERU4xLlJlbWVtYmVyTWV9fSIgUmVjb3JkZWRWYWx1ZT0iZmFsc2UiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSJkYjYxZDc1MC0wMzljLTQyMzctOGVlYi03ZmIwZDIyZGU5MDEiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE1NDM5L2YwZmIyN2RiMDM5ODQ0ZjQ4OTE2ZTQ3MDM1ZjViMDhkL2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0id2ViU29ja2V0cyIgUmVjb3JkZWRWYWx1ZT0id2ViU29ja2V0cyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQTR2amlUazAzdTBlOEhHUmhGbW92RFFBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHZLaHBoZUJkaFV5cDNQMWx0VE1aUE5SMmwzV2J5dlM1V2xSJTJGJTJGalFSZWJnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBMThnZnNKWndHakJ2VkFwb2NERzVCQWdLMEEyZ1dncVBEVVNzQlI1M0FKakFBQUFBUFE3S2hhWEVkU3owNTRCdUZ5VkdtamlUNnFjVFQyQiUyRjNoSVJLUENHckYlMkJhR05PTU5lc0d0JTJGTUhkOXgzTFFUaEFBQUFBdTFuYjVWMjcwd3I5alN3Z0VSWExVQXdvRmtXTkJGWiUyQlR2TGJ0ZlJsMXQ1VGIxakVRWnR5R1pIQVc4JTJGTmxCZHdCb3BlRG9UcEhmazVqREVsMGhRa3pRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUE0dmppVGswM3UwZThIR1JoRm1vdkRRQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUR2S2hwaGVCZGhVeXAzUDFsdFRNWlBOUjJsM1dieXZTNVdsUiUyRiUyRmpRUmViZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQTE4Z2ZzSlp3R2pCdlZBcG9jREc1QkFnSzBBMmdXZ3FQRFVTc0JSNTNBSmpBQUFBQVBRN0toYVhFZFN6MDU0QnVGeVZHbWppVDZxY1RUMkIlMkYzaElSS1BDR3JGJTJCYUdOT01OZXNHdCUyRk1IZDl4M0xRVGhBQUFBQXUxbmI1VjI3MHdyOWpTd2dFUlhMVUF3b0ZrV05CRlolMkJUdkxidGZSbDF0NVRiMWpFUVp0eUdaSEFXOCUyRk5sQmR3Qm9wZURvVHBIZms1akRFbDBoUWt6USUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBMTQ3MSUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjAiIFJlY29yZGVkVmFsdWU9IjAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjgyMzc5MTNhLWUzMWUtNGI1Yy05ZjY5LWVhMTdlNDIxZTI1NSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzkxYTNhMThkMzIzMTQ4YWFhOWQwYmFkMDMxZGRlMTY1IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI4NWUxNTk1OS0xN2RlLTQyNmUtODM1Yy0wZGQ5ODZiNzk5MzkiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE1NDM5L2YwZmIyN2RiMDM5ODQ0ZjQ4OTE2ZTQ3MDM1ZjViMDhkL2FydGVyeVNpZ25hbFIvYWJvcnQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9IndlYlNvY2tldHMiIFJlY29yZGVkVmFsdWU9IndlYlNvY2tldHMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUE0dmppVGswM3UwZThIR1JoRm1vdkRRQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUR2S2hwaGVCZGhVeXAzUDFsdFRNWlBOUjJsM1dieXZTNVdsUiUyRiUyRmpRUmViZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQTE4Z2ZzSlp3R2pCdlZBcG9jREc1QkFnSzBBMmdXZ3FQRFVTc0JSNTNBSmpBQUFBQVBRN0toYVhFZFN6MDU0QnVGeVZHbWppVDZxY1RUMkIlMkYzaElSS1BDR3JGJTJCYUdOT01OZXNHdCUyRk1IZDl4M0xRVGhBQUFBQXUxbmI1VjI3MHdyOWpTd2dFUlhMVUF3b0ZrV05CRlolMkJUdkxidGZSbDF0NVRiMWpFUVp0eUdaSEFXOCUyRk5sQmR3Qm9wZURvVHBIZms1akRFbDBoUWt6USUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBNHZqaVRrMDN1MGU4SEdSaEZtb3ZEUUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEdktocGhlQmRoVXlwM1AxbHRUTVpQTlIybDNXYnl2UzVXbFIlMkYlMkZqUVJlYmdBQUFBQU9nQUFBQUFJQUFDQUFBQUExOGdmc0pad0dqQnZWQXBvY0RHNUJBZ0swQTJnV2dxUERVU3NCUjUzQUpqQUFBQUFQUTdLaGFYRWRTejA1NEJ1RnlWR21qaVQ2cWNUVDJCJTJGM2hJUktQQ0dyRiUyQmFHTk9NTmVzR3QlMkZNSGQ5eDNMUVRoQUFBQUF1MW5iNVYyNzB3cjlqU3dnRVJYTFVBd29Ga1dOQkZaJTJCVHZMYnRmUmwxdDVUYjFqRVFadHlHWkhBVzglMkZObEJkd0JvcGVEb1RwSGZrNWpERWwwaFFrelElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iODlhMmMwMTAtZmFiNS00NDE5LThlYmQtOTIxNjNmNWQzOTI4IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNTQzOS9mMGZiMjdkYjAzOTg0NGY0ODkxNmU0NzAzNWY1YjA4ZC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSI5IiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBMTQ3MSUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY2xpZW50UHJvdG9jb2wiIFZhbHVlPSIxLjMiIFJlY29yZGVkVmFsdWU9IjEuMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NDQ2NDE1NDY5IiBSZWNvcmRlZFZhbHVlPSIxMzk3NDQ2NDE1NDY5IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iZWY3YzBkNjktN2YzMC00YjNhLWFkZGQtZTFiYmU3NTcxYTRkIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNDcxL1RyYWlsVXNhZ2VSZXBvcnQuYXNweCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDoxNDcxLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxDb3JyZWxhdGlvbkV4dHJhY3Rpb25SdWxlcz4NCiAgICAgICAgPEV4dHJhY3Rpb25SdWxlIENsYXNzbmFtZT0iTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5UZXN0VG9vbHMuV2ViVGVzdGluZy5SdWxlcy5FeHRyYWN0VGV4dCwgTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5RdWFsaXR5VG9vbHMuV2ViVGVzdEZyYW1ld29yaywgVmVyc2lvbj0xMC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhIiBWYXJpYWJsZU5hbWU9IlF1ZXJ5U3RyaW5nUGFyYW05OS5PcFR5cGUiIERpc3BsYXlOYW1lPSIiIERlc2NyaXB0aW9uPSIiPg0KICAgICAgICAgIDxSdWxlUGFyYW1ldGVycz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlN0YXJ0c1dpdGgiIFZhbHVlPSI/T3BUeXBlPSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IkVuZHNXaXRoIiBWYWx1ZT0iJmFtcDsiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJJbmRleCIgVmFsdWU9IjQiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJJZ25vcmVDYXNlIiBWYWx1ZT0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJVc2VSZWd1bGFyRXhwcmVzc2lvbiIgVmFsdWU9IkZhbHNlIiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iSHRtbERlY29kZSIgVmFsdWU9IlRydWUiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJSZXF1aXJlZCIgVmFsdWU9IkZhbHNlIiAvPg0KICAgICAgICAgIDwvUnVsZVBhcmFtZXRlcnM+DQogICAgICAgIDwvRXh0cmFjdGlvblJ1bGU+DQogICAgICAgIDxFeHRyYWN0aW9uUnVsZSBDbGFzc25hbWU9Ik1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uVGVzdFRvb2xzLldlYlRlc3RpbmcuUnVsZXMuRXh0cmFjdFRleHQsIE1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uUXVhbGl0eVRvb2xzLldlYlRlc3RGcmFtZXdvcmssIFZlcnNpb249MTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYSIgVmFyaWFibGVOYW1lPSJRdWVyeVN0cmluZ1BhcmFtMTAwLkxDSUQiIERpc3BsYXlOYW1lPSIiIERlc2NyaXB0aW9uPSIiPg0KICAgICAgICAgIDxSdWxlUGFyYW1ldGVycz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlN0YXJ0c1dpdGgiIFZhbHVlPSImYW1wO2FtcDtMQ0lEPSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IkVuZHNXaXRoIiBWYWx1ZT0iJmFtcDsiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJJbmRleCIgVmFsdWU9IjAiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJJZ25vcmVDYXNlIiBWYWx1ZT0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJVc2VSZWd1bGFyRXhwcmVzc2lvbiIgVmFsdWU9IkZhbHNlIiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iSHRtbERlY29kZSIgVmFsdWU9IlRydWUiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJSZXF1aXJlZCIgVmFsdWU9IkZhbHNlIiAvPg0KICAgICAgICAgIDwvUnVsZVBhcmFtZXRlcnM+DQogICAgICAgIDwvRXh0cmFjdGlvblJ1bGU+DQogICAgICAgIDxFeHRyYWN0aW9uUnVsZSBDbGFzc25hbWU9Ik1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uVGVzdFRvb2xzLldlYlRlc3RpbmcuUnVsZXMuRXh0cmFjdFRleHQsIE1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uUXVhbGl0eVRvb2xzLldlYlRlc3RGcmFtZXdvcmssIFZlcnNpb249MTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYSIgVmFyaWFibGVOYW1lPSJRdWVyeVN0cmluZ1BhcmFtMTAxLk9wVHlwZSIgRGlzcGxheU5hbWU9IiIgRGVzY3JpcHRpb249IiI+DQogICAgICAgICAgPFJ1bGVQYXJhbWV0ZXJzPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iU3RhcnRzV2l0aCIgVmFsdWU9Ij9PcFR5cGU9IiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iRW5kc1dpdGgiIFZhbHVlPSImYW1wOyIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IkluZGV4IiBWYWx1ZT0iNCIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9Iklnbm9yZUNhc2UiIFZhbHVlPSJGYWxzZSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlVzZVJlZ3VsYXJFeHByZXNzaW9uIiBWYWx1ZT0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJIdG1sRGVjb2RlIiBWYWx1ZT0iVHJ1ZSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlJlcXVpcmVkIiBWYWx1ZT0iRmFsc2UiIC8+DQogICAgICAgICAgPC9SdWxlUGFyYW1ldGVycz4NCiAgICAgICAgPC9FeHRyYWN0aW9uUnVsZT4NCiAgICAgICAgPEV4dHJhY3Rpb25SdWxlIENsYXNzbmFtZT0iTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5UZXN0VG9vbHMuV2ViVGVzdGluZy5SdWxlcy5FeHRyYWN0VGV4dCwgTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5RdWFsaXR5VG9vbHMuV2ViVGVzdEZyYW1ld29yaywgVmVyc2lvbj0xMC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhIiBWYXJpYWJsZU5hbWU9IlF1ZXJ5U3RyaW5nUGFyYW0xMDIuTENJRCIgRGlzcGxheU5hbWU9IiIgRGVzY3JpcHRpb249IiI+DQogICAgICAgICAgPFJ1bGVQYXJhbWV0ZXJzPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iU3RhcnRzV2l0aCIgVmFsdWU9IiZhbXA7YW1wO0xDSUQ9IiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iRW5kc1dpdGgiIFZhbHVlPSImYW1wOyIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IkluZGV4IiBWYWx1ZT0iMCIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9Iklnbm9yZUNhc2UiIFZhbHVlPSJGYWxzZSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlVzZVJlZ3VsYXJFeHByZXNzaW9uIiBWYWx1ZT0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJIdG1sRGVjb2RlIiBWYWx1ZT0iVHJ1ZSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IlJlcXVpcmVkIiBWYWx1ZT0iRmFsc2UiIC8+DQogICAgICAgICAgPC9SdWxlUGFyYW1ldGVycz4NCiAgICAgICAgPC9FeHRyYWN0aW9uUnVsZT4NCiAgICAgIDwvQ29ycmVsYXRpb25FeHRyYWN0aW9uUnVsZXM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSIzMDE0ZDMwZS1iMjc3LTQ0NWUtYmNkZS1iZjkwNGNhODE2MzUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE1NDM5L2YwZmIyN2RiMDM5ODQ0ZjQ4OTE2ZTQ3MDM1ZjViMDhkL2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0id2ViU29ja2V0cyIgUmVjb3JkZWRWYWx1ZT0id2ViU29ja2V0cyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQTR2amlUazAzdTBlOEhHUmhGbW92RFFBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHlTSUtJZWxPekJJQ3QwaWxyUUU5TjdNOU44NTU4T2NyNW1GcW9oUFVxS3dBQUFBQU9nQUFBQUFJQUFDQUFBQUJCeWpoUHpqRGVzRzUzc1B1N1lnV2tuJTJCakZ3b0t6MjdIZUtseXFTemNuJTJCekFBQUFESzZ1aDR6Qjlsd3NWOTYwOEJ5V1dlaXhaRFJGNDduVm9XUFBEcncyRThXeFpneEFCWXJzJTJGanBlTEVoYXE4NjhkQUFBQUFZOUMlMkY3ZnE0SGhOekNyQ1hHYWp3QnhaJTJCdlRqV3haQWNndWZnaURsaUpaRk5YbzJxYVU5SGNkbVNDd21Mc0xac2hnemlwNW83JTJGMEVBSUF0Q09FaXRmdyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBNHZqaVRrMDN1MGU4SEdSaEZtb3ZEUUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEeVNJS0llbE96QklDdDBpbHJRRTlON005Tjg1NThPY3I1bUZxb2hQVXFLd0FBQUFBT2dBQUFBQUlBQUNBQUFBQkJ5amhQempEZXNHNTNzUHU3WWdXa24lMkJqRndvS3oyN0hlS2x5cVN6Y24lMkJ6QUFBQURLNnVoNHpCOWx3c1Y5NjA4QnlXV2VpeFpEUkY0N25Wb1dQUERydzJFOFd4Wmd4QUJZcnMlMkZqcGVMRWhhcTg2OGRBQUFBQVk5QyUyRjdmcTRIaE56Q3JDWEdhandCeFolMkJ2VGpXeFpBY2d1ZmdpRGxpSlpGTlhvMnFhVTlIY2RtU0N3bUxzTFpzaGd6aXA1bzclMkYwRUFJQXRDT0VpdGZ3JTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0ExNDcxJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBMTQ3MSUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iNSIgUmVjb3JkZWRWYWx1ZT0iNSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iYjA3ZmEwNmYtZjk1YS00ZDQ5LTk2NTItZTNlNjk1NmViZWZkIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNDcxL19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvYTJjMjk0YzJlMDAyNGNmOThhMTM0ODkxYjVhYmQwZmUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0iYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJYLVJlcXVlc3RlZC1XaXRoIiBWYWx1ZT0iWE1MSHR0cFJlcXVlc3QiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNGU1NjFhODEtNjg3My00YzQ1LTlkMjMtYjc5MTNlY2YxYzJlIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNTQzOS9mMGZiMjdkYjAzOTg0NGY0ODkxNmU0NzAzNWY1YjA4ZC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9IndlYlNvY2tldHMiIFJlY29yZGVkVmFsdWU9IndlYlNvY2tldHMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUE0dmppVGswM3UwZThIR1JoRm1vdkRRQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUR5U0lLSWVsT3pCSUN0MGlsclFFOU43TTlOODU1OE9jcjVtRnFvaFBVcUt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCQnlqaFB6akRlc0c1M3NQdTdZZ1drbiUyQmpGd29LejI3SGVLbHlxU3pjbiUyQnpBQUFBREs2dWg0ekI5bHdzVjk2MDhCeVdXZWl4WkRSRjQ3blZvV1BQRHJ3MkU4V3haZ3hBQllycyUyRmpwZUxFaGFxODY4ZEFBQUFBWTlDJTJGN2ZxNEhoTnpDckNYR2Fqd0J4WiUyQnZUald4WkFjZ3VmZ2lEbGlKWkZOWG8ycWFVOUhjZG1TQ3dtTHNMWnNoZ3ppcDVvNyUyRjBFQUlBdENPRWl0ZnclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQTR2amlUazAzdTBlOEhHUmhGbW92RFFBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHlTSUtJZWxPekJJQ3QwaWxyUUU5TjdNOU44NTU4T2NyNW1GcW9oUFVxS3dBQUFBQU9nQUFBQUFJQUFDQUFBQUJCeWpoUHpqRGVzRzUzc1B1N1lnV2tuJTJCakZ3b0t6MjdIZUtseXFTemNuJTJCekFBQUFESzZ1aDR6Qjlsd3NWOTYwOEJ5V1dlaXhaRFJGNDduVm9XUFBEcncyRThXeFpneEFCWXJzJTJGanBlTEVoYXE4NjhkQUFBQUFZOUMlMkY3ZnE0SGhOekNyQ1hHYWp3QnhaJTJCdlRqV3haQWNndWZnaURsaUpaRk5YbzJxYVU5SGNkbVNDd21Mc0xac2hnemlwNW83JTJGMEVBSUF0Q09FaXRmdyUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBMTQ3MSUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9ImU5OGE3NDNiLTg1YzktNDkyNC1iYjE0LWE3OTBmNzZmNWNhOCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS9SZXNlcnZlZC5SZXBvcnRWaWV3ZXJXZWJDb250cm9sLmF4ZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDoxNDcxL1RyYWlsVXNhZ2VSZXBvcnQuYXNweCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJPcFR5cGUiIFZhbHVlPSJDYWxlbmRhciIgUmVjb3JkZWRWYWx1ZT0iQ2FsZW5kYXIiIENvcnJlbGF0aW9uQmluZGluZz0ie3tRdWVyeVN0cmluZ1BhcmFtOTkuT3BUeXBlfX0iIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9IkxDSUQiIFZhbHVlPSIxMDMzIiBSZWNvcmRlZFZhbHVlPSIxMDMzIiBDb3JyZWxhdGlvbkJpbmRpbmc9Int7UXVlcnlTdHJpbmdQYXJhbTEwMC5MQ0lEfX0iIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InNlbGVjdERhdGUiIFZhbHVlPSIiIFJlY29yZGVkVmFsdWU9IiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iMmEwZWFiODAtMGFhZi00ZWFjLTk5N2YtMWFiZDk0MDY2YjhmIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNDcxL1Jlc2VydmVkLlJlcG9ydFZpZXdlcldlYkNvbnRyb2wuYXhkIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvVHJhaWxVc2FnZVJlcG9ydC5hc3B4IiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Ik9wVHlwZSIgVmFsdWU9IkNhbGVuZGFyIiBSZWNvcmRlZFZhbHVlPSJDYWxlbmRhciIgQ29ycmVsYXRpb25CaW5kaW5nPSJ7e1F1ZXJ5U3RyaW5nUGFyYW0xMDEuT3BUeXBlfX0iIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9IkxDSUQiIFZhbHVlPSIxMDMzIiBSZWNvcmRlZFZhbHVlPSIxMDMzIiBDb3JyZWxhdGlvbkJpbmRpbmc9Int7UXVlcnlTdHJpbmdQYXJhbTEwMi5MQ0lEfX0iIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InNlbGVjdERhdGUiIFZhbHVlPSIiIFJlY29yZGVkVmFsdWU9IiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjY5NjZkZGYxLWRlYjUtNGJlMS1iZDIzLTE3ZjQ2Yjk3MjI2MiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTU0MzkvZjBmYjI3ZGIwMzk4NDRmNDg5MTZlNDcwMzVmNWIwOGQvYXJ0ZXJ5U2lnbmFsUi9uZWdvdGlhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvVHJhaWxVc2FnZVJlcG9ydC5hc3B4IiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBMTQ3MSUyRlRyYWlsVXNhZ2VSZXBvcnQuYXNweCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTE0NzElMkZUcmFpbFVzYWdlUmVwb3J0LmFzcHgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzQ0NjQyODA0NCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzQ0NjQyODA0NCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9ImU3ZmJhNzViLTc2OGEtNDA2Yy1iYjAwLTZhZjVjNGM4Yzc5MyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTQ3MS9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzM0YzY1NGI1OWEyNTRlNjA5NzA4MzExNWI5ZjczNTk4IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjE0NzEvVHJhaWxVc2FnZVJlcG9ydC5hc3B4IiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgPC9JdGVtcz4NCiAgPFZhbGlkYXRpb25SdWxlcz4NCiAgICA8VmFsaWRhdGlvblJ1bGUgQ2xhc3NuYW1lPSJNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlRlc3RUb29scy5XZWJUZXN0aW5nLlJ1bGVzLlZhbGlkYXRlUmVzcG9uc2VVcmwsIE1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uUXVhbGl0eVRvb2xzLldlYlRlc3RGcmFtZXdvcmssIFZlcnNpb249MTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYSIgRGlzcGxheU5hbWU9IlJlc3BvbnNlIFVSTCIgRGVzY3JpcHRpb249IlZhbGlkYXRlcyB0aGF0IHRoZSByZXNwb25zZSBVUkwgYWZ0ZXIgcmVkaXJlY3RzIGFyZSBmb2xsb3dlZCBpcyB0aGUgc2FtZSBhcyB0aGUgcmVjb3JkZWQgcmVzcG9uc2UgVVJMLiAgUXVlcnlTdHJpbmcgcGFyYW1ldGVycyBhcmUgaWdub3JlZC4iIExldmVsPSJMb3ciIEV4ZWN0dWlvbk9yZGVyPSJCZWZvcmVEZXBlbmRlbnRzIiAvPg0KICAgIDxWYWxpZGF0aW9uUnVsZSBDbGFzc25hbWU9Ik1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uVGVzdFRvb2xzLldlYlRlc3RpbmcuUnVsZXMuVmFsaWRhdGlvblJ1bGVSZXNwb25zZVRpbWVHb2FsLCBNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlF1YWxpdHlUb29scy5XZWJUZXN0RnJhbWV3b3JrLCBWZXJzaW9uPTEwLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EiIERpc3BsYXlOYW1lPSJSZXNwb25zZSBUaW1lIEdvYWwiIERlc2NyaXB0aW9uPSJWYWxpZGF0ZXMgdGhhdCB0aGUgcmVzcG9uc2UgdGltZSBmb3IgdGhlIHJlcXVlc3QgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHRoZSByZXNwb25zZSB0aW1lIGdvYWwgYXMgc3BlY2lmaWVkIG9uIHRoZSByZXF1ZXN0LiAgUmVzcG9uc2UgdGltZSBnb2FscyBvZiB6ZXJvIHdpbGwgYmUgaWdub3JlZC4iIExldmVsPSJMb3ciIEV4ZWN0dWlvbk9yZGVyPSJBZnRlckRlcGVuZGVudHMiPg0KICAgICAgPFJ1bGVQYXJhbWV0ZXJzPg0KICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJUb2xlcmFuY2UiIFZhbHVlPSIwIiAvPg0KICAgICAgPC9SdWxlUGFyYW1ldGVycz4NCiAgICA8L1ZhbGlkYXRpb25SdWxlPg0KICA8L1ZhbGlkYXRpb25SdWxlcz4NCjwvV2ViVGVzdD4=">
      <Execution id="6563c412-689e-46af-9fa1-206d3da7abfa" />
    </WebTest>
    <LoadTest Name="LoadTest1" Description="" Owner="" storage="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\loadtest1.loadtest" Priority="2147483647" Enabled="true" CssProjectStructure="" CssIteration="" DeploymentItemsEditable="" WorkItemIds="" TraceLevel="None" CurrentRunConfig="Run Settings1" Id="43582e16-bdf7-42b1-94d9-faed4d2e2ddd">
      <Scenarios>
        <Scenario Name="Scenario1" DelayBetweenIterations="0" PercentNewUsers="0" IPSwitching="true" TestMixType="PercentageOfTestsStarted" ApplyDistributionToPacingDelay="true" MaxTestIterations="0" DisableDuringWarmup="false" DelayStartTime="0" AllowedAgents="">
          <ThinkProfile Value="0.2" Pattern="NormalDistribution" />
          <LoadProfile Pattern="Constant" InitialUsers="25" />
          <TestMix>
            <TestProfile Name="CodedUITestMethod1" Path="c:\users\parth\documents\visual studio 2013\projects\lab7\codeduitestproject\bin\release\codeduitestproject.dll" Id="ce93a571-9a28-213e-898b-36e75210af31" Percentage="20" Type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
            <TestProfile Name="IndexTest" Path="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\bin\release\trailmixadmintest.dll" Id="f7406c51-aff2-3005-4e2c-555be7574a8e" Percentage="20" Type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
            <TestProfile Name="TestMethod1" Path="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\bin\release\trailmixadmintest.dll" Id="48681be4-01ca-f02d-5ae1-45ef749ad594" Percentage="20" Type="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestElement, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.ObjectModel, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
            <TestProfile Name="WebTest1" Path="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\webtest1.webtest" Id="9e2331ba-7d51-42ee-ab09-a187c8f4d2eb" Percentage="20" Type="Microsoft.VisualStudio.TestTools.WebStress.DeclarativeWebTestElement, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
            <TestProfile Name="WebTest2" Path="c:\users\parth\documents\visual studio 2013\projects\lab7\trailmixadmintest\webtest2.webtest" Id="f6f020f4-f082-405e-bfa7-a86699b46e8c" Percentage="20" Type="Microsoft.VisualStudio.TestTools.WebStress.DeclarativeWebTestElement, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
          </TestMix>
          <BrowserMix>
            <BrowserProfile Percentage="100">
              <Browser Name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header Name="User-Agent" Value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header Name="Accept" Value="*/*" />
                  <Header Name="Accept-Language" Value="{{$IEAcceptLanguage}}" />
                  <Header Name="Accept-Encoding" Value="GZIP" />
                </Headers>
              </Browser>
            </BrowserProfile>
          </BrowserMix>
          <NetworkMix>
            <NetworkProfile Percentage="100">
              <Network Name="LAN" BandwidthInKbps="1000000" NetworkProfileConfigurationXml="&lt;Emulation&gt;&lt;VirtualChannel name=&quot;defaultChannel&quot;&gt;&lt;FilterList/&gt;&lt;VirtualLink instances=&quot;1&quot; name=&quot;defaultLink&quot;&gt;&lt;LinkRule dir=&quot;upstream&quot;&gt;&lt;Bandwidth&gt;&lt;Speed unit=&quot;kbps&quot;&gt;1000000&lt;/Speed&gt;&lt;/Bandwidth&gt;&lt;/LinkRule&gt;&lt;LinkRule dir=&quot;downstream&quot;&gt;&lt;Bandwidth&gt;&lt;Speed unit=&quot;kbps&quot;&gt;1000000&lt;/Speed&gt;&lt;/Bandwidth&gt;&lt;/LinkRule&gt;&lt;/VirtualLink&gt;&lt;/VirtualChannel&gt;&lt;/Emulation&gt;" />
            </NetworkProfile>
          </NetworkMix>
        </Scenario>
      </Scenarios>
      <CounterSets>
        <CounterSet Name="D4RK" CounterSetType="LoadTest" LocId="">
          <CounterCategories>
            <CounterCategory Name="LoadTest:Scenario">
              <Counters>
                <Counter Name="User Load" HigherIsBetter="true" />
                <Counter Name="Tests Running" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Test">
              <Counters>
                <Counter Name="Total Tests" HigherIsBetter="true" />
                <Counter Name="Passed Tests" HigherIsBetter="true" />
                <Counter Name="Failed Tests" />
                <Counter Name="Tests/Sec" HigherIsBetter="true" />
                <Counter Name="Passed Tests/Sec" HigherIsBetter="true" />
                <Counter Name="Failed Tests/Sec" />
                <Counter Name="Avg. Requests/Test" HigherIsBetter="true" />
                <Counter Name="Avg. Test Time" />
                <Counter Name="% Time in LoadTestPlugin" />
                <Counter Name="% Time in WebTest code" />
                <Counter Name="% Time in Rules" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Transaction">
              <Counters>
                <Counter Name="Total Transactions" HigherIsBetter="true" />
                <Counter Name="Avg. Transaction Time" />
                <Counter Name="Avg. Response Time" />
                <Counter Name="Transactions/Sec" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Errors">
              <Counters>
                <Counter Name="Http Errors" />
                <Counter Name="Validation Rule Errors" />
                <Counter Name="Extraction Rule Errors" />
                <Counter Name="Requests Timed Out" />
                <Counter Name="Exceptions" />
                <Counter Name="Total Errors" />
                <Counter Name="Errors/Sec" />
                <Counter Name="Threshold Violations/Sec" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Page">
              <Counters>
                <Counter Name="Total Pages" HigherIsBetter="true" />
                <Counter Name="Avg. Page Time" />
                <Counter Name="Page Response Time Goal" HigherIsBetter="true" />
                <Counter Name="% Pages Meeting Goal" HigherIsBetter="true" />
                <Counter Name="Pages/Sec" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Request">
              <Counters>
                <Counter Name="Total Requests" HigherIsBetter="true" />
                <Counter Name="Passed Requests" HigherIsBetter="true" />
                <Counter Name="Failed Requests" />
                <Counter Name="Cached Requests" HigherIsBetter="true" />
                <Counter Name="Requests/Sec" HigherIsBetter="true" />
                <Counter Name="Passed Requests/Sec" HigherIsBetter="true" />
                <Counter Name="Failed Requests/Sec" />
                <Counter Name="Avg. First Byte Time" />
                <Counter Name="Avg. Response Time" />
                <Counter Name="Avg. Connection Wait Time">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="LoadTest:Page" />
                        <RuleParameter Name="DependentCounter" Value="Avg. Page Time" />
                        <RuleParameter Name="DependentInstance" Value="_Total" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.25" />
                        <RuleParameter Name="CriticalThreshold" Value="0.5" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Content Length" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:LogEntries">
              <Counters>
                <Counter Name="Total Log Entries" />
                <Counter Name="Log Entries/Sec" />
              </Counters>
            </CounterCategory>
          </CounterCategories>
        </CounterSet>
        <CounterSet Name="Controller" CounterSetType="Controller" LocId="CounterSet_Controller">
          <CounterCategories>
            <CounterCategory Name="Memory">
              <Counters>
                <Counter Name="% Committed Bytes In Use" Range="100" />
                <Counter Name="Available MBytes" RangeGroup="Memory Bytes" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Page Faults/sec" />
                <Counter Name="Pages/sec" />
                <Counter Name="Pool Paged Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Pool Nonpaged bytes" RangeGroup="Memory Bytes" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Network Interface">
              <Counters>
                <Counter Name="Bytes Received/sec" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Sent/sec" RangeGroup="Network Bytes" />
                <Counter Name="Output Queue Length">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Packets Received/sec" RangeGroup="Network Packets" />
                <Counter Name="Packets Sent/sec" RangeGroup="Network Packets" />
                <Counter Name="Current Bandwidth" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Total/sec" RangeGroup="Network Bytes">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="PhysicalDisk">
              <Counters>
                <Counter Name="% Disk Read Time" Range="100" />
                <Counter Name="% Disk Time" Range="100" />
                <Counter Name="% Disk Write Time" Range="100" />
                <Counter Name="% Idle Time" Range="100" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Disk Bytes/Read" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Transfer" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Write" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Read Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Write Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Current Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk sec/Read" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Transfer" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Write" RangeGroup="Disk sec" />
                <Counter Name="Disk Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Read Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Reads/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Transfers/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Write Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Writes/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Split IO/Sec" RangeGroup="Disk Transfers sec" />
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="Processor">
              <Counters>
                <Counter Name="% Processor Time" Range="100">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="% Privileged Time" Range="100" />
                <Counter Name="% User Time" Range="100" />
              </Counters>
              <Instances>
                <Instance Name="_Total" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="System">
              <Counters>
                <Counter Name="Context Switches/sec" />
                <Counter Name="Processes" />
                <Counter Name="Processor Queue Length" />
                <Counter Name="Threads" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Process">
              <Counters>
                <Counter Name="% Processor Time" RangeGroup="Processor Time" />
                <Counter Name="% Privileged Time" RangeGroup="Processor Time" />
                <Counter Name="% User Time" RangeGroup="Processor Time" />
                <Counter Name="Handle Count" />
                <Counter Name="Thread Count" />
                <Counter Name="Private Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Virtual Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Working Set" RangeGroup="Memory Bytes" />
              </Counters>
              <Instances>
                <Instance Name="QTController" />
                <Instance Name="QTController64" />
              </Instances>
            </CounterCategory>
          </CounterCategories>
          <DefaultCountersForAutomaticGraphs>
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="_Total" GraphName="" />
            <DefaultCounter CategoryName="Memory" CounterName="Available MBytes" InstanceName="" GraphName="" />
          </DefaultCountersForAutomaticGraphs>
        </CounterSet>
        <CounterSet Name="Agent" CounterSetType="Agent" LocId="CounterSet_Agent">
          <CounterCategories>
            <CounterCategory Name="Memory">
              <Counters>
                <Counter Name="% Committed Bytes In Use" Range="100" />
                <Counter Name="Available MBytes" RangeGroup="Memory Bytes" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Page Faults/sec" />
                <Counter Name="Pages/sec" />
                <Counter Name="Pool Paged Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Pool Nonpaged bytes" RangeGroup="Memory Bytes" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Network Interface">
              <Counters>
                <Counter Name="Bytes Received/sec" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Sent/sec" RangeGroup="Network Bytes" />
                <Counter Name="Output Queue Length">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Packets Received/sec" RangeGroup="Network Packets" />
                <Counter Name="Packets Sent/sec" RangeGroup="Network Packets" />
                <Counter Name="Current Bandwidth" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Total/sec" RangeGroup="Network Bytes">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="PhysicalDisk">
              <Counters>
                <Counter Name="% Disk Read Time" Range="100" />
                <Counter Name="% Disk Time" Range="100" />
                <Counter Name="% Disk Write Time" Range="100" />
                <Counter Name="% Idle Time" Range="100" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Disk Bytes/Read" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Transfer" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Write" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Read Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Write Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Current Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk sec/Read" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Transfer" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Write" RangeGroup="Disk sec" />
                <Counter Name="Disk Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Read Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Reads/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Transfers/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Write Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Writes/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Split IO/Sec" RangeGroup="Disk Transfers sec" />
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="Processor">
              <Counters>
                <Counter Name="% Processor Time" Range="100">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="% Privileged Time" Range="100" />
                <Counter Name="% User Time" Range="100" />
              </Counters>
              <Instances>
                <Instance Name="0" />
                <Instance Name="_Total" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="System">
              <Counters>
                <Counter Name="Context Switches/sec" />
                <Counter Name="Processes" />
                <Counter Name="Processor Queue Length" />
                <Counter Name="Threads" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Process">
              <Counters>
                <Counter Name="% Processor Time" RangeGroup="Processor Time" />
                <Counter Name="% Privileged Time" RangeGroup="Processor Time" />
                <Counter Name="% User Time" RangeGroup="Processor Time" />
                <Counter Name="Handle Count" />
                <Counter Name="Thread Count" />
                <Counter Name="Private Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Virtual Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Working Set" RangeGroup="Memory Bytes" />
              </Counters>
              <Instances>
                <Instance Name="devenv" />
                <Instance Name="QTAgentService" />
                <Instance Name="QTAgent" />
                <Instance Name="QTAgent32" />
                <Instance Name="QTDCAgent" />
                <Instance Name="QTDCAgent32" />
                <Instance Name="QTAgent_35" />
                <Instance Name="QTAgent_40" />
                <Instance Name="QTAgent32_35" />
                <Instance Name="QTAgent32_40" />
              </Instances>
            </CounterCategory>
          </CounterCategories>
          <DefaultCountersForAutomaticGraphs>
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="0" GraphName="" RunType="Local" />
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="_Total" GraphName="" RunType="Remote" />
            <DefaultCounter CategoryName="Memory" CounterName="Available MBytes" InstanceName="" GraphName="" />
          </DefaultCountersForAutomaticGraphs>
        </CounterSet>
      </CounterSets>
      <RunConfigurations>
        <RunConfiguration Name="Run Settings1" Description="" ResultsStoreType="Database" TimingDetailsStorage="AllIndividualDetails" SaveTestLogsOnError="true" SaveTestLogsFrequency="0" MaxErrorDetails="200" MaxErrorsPerType="1000" MaxThresholdViolations="1000" MaxRequestUrlsReported="1000" UseTestIterations="false" RunDuration="600" WarmupTime="0" CoolDownTime="0" TestIterations="100" WebTestConnectionModel="ConnectionPerUser" WebTestConnectionPoolSize="50" SampleRate="5" ValidationLevel="High" SqlTracingConnectString="" SqlTracingConnectStringDisplayValue="" SqlTracingDirectory="" SqlTracingEnabled="false" SqlTracingFileCount="2" SqlTracingRolloverEnabled="true" SqlTracingMinimumDuration="500" RunUnitTestsInAppDomain="true" CoreCount="0">
          <CounterSetMappings>
            <CounterSetMapping ComputerName="[CONTROLLER MACHINE]">
              <CounterSetReferences>
                <CounterSetReference CounterSetName="LoadTest" />
                <CounterSetReference CounterSetName="Controller" />
              </CounterSetReferences>
            </CounterSetMapping>
            <CounterSetMapping ComputerName="[AGENT MACHINES]">
              <CounterSetReferences>
                <CounterSetReference CounterSetName="Agent" />
              </CounterSetReferences>
            </CounterSetMapping>
          </CounterSetMappings>
        </RunConfiguration>
      </RunConfigurations>
    </LoadTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="43582e16-bdf7-42b1-94d9-faed4d2e2ddd" executionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d">
      <TestEntries>
        <TestEntry testId="ce93a571-9a28-213e-898b-36e75210af31" executionId="b090b7e2-0c07-463b-8ebf-42827cfbfea3" parentExecutionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
        <TestEntry testId="f7406c51-aff2-3005-4e2c-555be7574a8e" executionId="a038b18b-f33a-4595-84cd-624a014d131f" parentExecutionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
        <TestEntry testId="48681be4-01ca-f02d-5ae1-45ef749ad594" executionId="1708e3f4-bfc1-44f7-aea1-083540bbf600" parentExecutionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
        <TestEntry isTransparent="false" testId="9e2331ba-7d51-42ee-ab09-a187c8f4d2eb" executionId="48595c98-6778-4373-8166-c4b9f35daf9b" parentExecutionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
        <TestEntry isTransparent="false" testId="f6f020f4-f082-405e-bfa7-a86699b46e8c" executionId="66874a89-3f6b-42eb-9de0-913861da8cf1" parentExecutionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
      </TestEntries>
    </TestEntry>
  </TestEntries>
  <Results>
    <LoadTestResult executionId="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" testId="43582e16-bdf7-42b1-94d9-faed4d2e2ddd" testName="LoadTest1" computerName="D4RK" duration="00:10:00" startTime="2014-04-13T23:48:53.9798681-04:00" endTime="2014-04-13T23:58:53.9798681-04:00" testType="fa4c85ff-1236-4463-b954-3ba2f0eabd95" outcome="Completed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5bcfcdfa-281e-4519-9b23-5e8ce500ef6c" runId="2" controllerStartTime="2014-04-13T23:48:53.9798681-04:00" runStatus="Stopped" resultsStoreType="Database" resultsRepositoryConnectString="LAs4ogoKlDd+VpAl2ugknpXtkwYcrJ4K4xho6CJjXD1Qv6o/LM9aSaAM4Ac5r6Taj3snulskUGTQzbVVXe9oT7r6RKtPoK7hv4F5g28RXiKSn9lO+5p/Kw==" loadTestDuration="600" loadTestWarmupTime="0" previouslyViewed="true">
      <AnalyzerViewState>
        <LoadTestRunDescriptor isLegendPanelVisible="true" isOverviewPanelVisible="true" isCounterPanelVisible="true" scrollingGraph="false" minMaxGraph="false" showHorizontalGridOnGraph="true" showThresholdsOnGraph="true" showComparison="false" showZoom="true" lockZoom="true" activeConsoleView="Summary" selectedGraphPanel1="Key Indicators" selectedGraphPanel2="Page Response Time" selectedGraphPanel3="System under Test" selectedGraphPanel4="Controller and Agents" graphPanelLayout="FourGrid" tablePanelLayout="TwoHorizontal" selectedTablePanel1="Tests" selectedTablePanel2="Errors" selectedTablePanel3="Thresholds" selectedTablePanel4="Transactions" controllerName="D4RK" isLocalRun="true" testRunId="adcaac93-3b29-4130-8a28-6e32da1c601b" repositoryRunId="0">
          <GraphDescriptors>
            <GraphDescriptor graphName="Key Indicators">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="0" rangeGroup="User Load" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Scenario" counterName="User Load" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="0" rangeGroup="Pages/Sec" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Pages/Sec" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16776961" lineStyle="0" fixedRange="0" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-8388480" lineStyle="0" fixedRange="0" rangeGroup="Tests/Sec" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Tests/Sec" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-23296" lineStyle="0" fixedRange="0" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744320" lineStyle="0" fixedRange="0" rangeGroup="Errors/Sec" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Errors" counterName="Errors/Sec" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-7667712" lineStyle="0" fixedRange="0" rangeGroup="Threshold Violations/Sec" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Errors" counterName="Threshold Violations/Sec" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
            <GraphDescriptor graphName="System under Test">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
            </GraphDescriptor>
            <GraphDescriptor graphName="Controller and Agents">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="100" rangeGroup="% Processor Time" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="Processor" counterName="% Processor Time" instanceName="0" baseInstanceName="0" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="0" rangeGroup="Memory Bytes" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="D4RK" categoryName="Memory" counterName="Available MBytes" instanceName="systemdiagnosticsperfcounterlibsingleinstance" baseInstanceName="systemdiagnosticsperfcounterlibsingleinstance" loadTestItemId="-1" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
            <GraphDescriptor graphName="Test Response Time">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="39" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="39" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="WebTest2(004)" baseInstanceName="WebTest2" loadTestItemId="4" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="39" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="WebTest1(003)" baseInstanceName="WebTest1" loadTestItemId="3" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16776961" lineStyle="0" fixedRange="39" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false" counterMetadata="TestMethod1;Scenario1">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="TestMethod1(002)" baseInstanceName="TestMethod1" loadTestItemId="2" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-8388480" lineStyle="0" fixedRange="39" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false" counterMetadata="IndexTest;Scenario1">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="IndexTest(001)" baseInstanceName="IndexTest" loadTestItemId="1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-23296" lineStyle="0" fixedRange="39" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false" counterMetadata="CodedUITestMethod1;Scenario1">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="CodedUITestMethod1(000)" baseInstanceName="CodedUITestMethod1" loadTestItemId="0" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
            <GraphDescriptor graphName="Transaction Response Time">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
            </GraphDescriptor>
            <GraphDescriptor graphName="Page Response Time">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="2" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="localhost:1471{GET}(013)" baseInstanceName="localhost:1471{GET}" loadTestItemId="13" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:15439/f0fb27db039844f48916e47035f5b08d/arterySignalR/negotiate----{POST}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="negotiate{POST}(004)" baseInstanceName="negotiate{POST}" loadTestItemId="4" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16776961" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/Account/Login----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="Login{GET}(008)" baseInstanceName="Login{GET}" loadTestItemId="8" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-8388480" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:15439/f0fb27db039844f48916e47035f5b08d/arterySignalR/connect----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="connect{GET}(011)" baseInstanceName="connect{GET}" loadTestItemId="11" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-23296" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/__browserLink/requestData/4f296221a2d64383ab6e832bb45edf37----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="4f296221a2d64383ab6e832bb45edf37{GET}(009)" baseInstanceName="4f296221a2d64383ab6e832bb45edf37{GET}" loadTestItemId="9" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744320" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:15439/f0fb27db039844f48916e47035f5b08d/arterySignalR/abort----{POST}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="abort{POST}(001)" baseInstanceName="abort{POST}" loadTestItemId="1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-7667712" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="localhost:1471{GET}(029)" baseInstanceName="localhost:1471{GET}" loadTestItemId="29" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16751616" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:15439/f0fb27db039844f48916e47035f5b08d/arterySignalR/negotiate----{POST}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="negotiate{POST}(020)" baseInstanceName="negotiate{POST}" loadTestItemId="20" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16777077" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/Account/Login----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="Login{GET}(024)" baseInstanceName="Login{GET}" loadTestItemId="24" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16741493" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:15439/f0fb27db039844f48916e47035f5b08d/arterySignalR/connect----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="connect{GET}(027)" baseInstanceName="connect{GET}" loadTestItemId="27" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-5383962" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/__browserLink/requestData/f9a22a699fa748158ff594ad10783902----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="f9a22a699fa748158ff594ad10783902{GET}(025)" baseInstanceName="f9a22a699fa748158ff594ad10783902{GET}" loadTestItemId="25" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-7278960" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:15439/f0fb27db039844f48916e47035f5b08d/arterySignalR/abort----{POST}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="abort{POST}(017)" baseInstanceName="abort{POST}" loadTestItemId="17" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-38476" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/Account/Login----{POST}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="Login{POST}(032)" baseInstanceName="Login{POST}" loadTestItemId="32" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-10496" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/__browserLink/requestData/d6f1d1cc10b548838b3bc75f0aa33d48----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="d6f1d1cc10b548838b3bc75f0aa33d48{GET}(034)" baseInstanceName="d6f1d1cc10b548838b3bc75f0aa33d48{GET}" loadTestItemId="34" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16777216" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/Account/Login----{POST}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="Login{POST}(035)" baseInstanceName="Login{POST}" loadTestItemId="35" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/__browserLink/requestData/91a3a18d323148aaa9d0bad031dde165----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="91a3a18d323148aaa9d0bad031dde165{GET}(036)" baseInstanceName="91a3a18d323148aaa9d0bad031dde165{GET}" loadTestItemId="36" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/TrailUsageReport.aspx----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="TrailUsageReport-aspx{GET}(040)" baseInstanceName="TrailUsageReport-aspx{GET}" loadTestItemId="40" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16776961" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/__browserLink/requestData/a2c294c2e0024cf98a134891b5abd0fe----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="a2c294c2e0024cf98a134891b5abd0fe{GET}(042)" baseInstanceName="a2c294c2e0024cf98a134891b5abd0fe{GET}" loadTestItemId="42" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-8388480" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/Home/About----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="About{GET}(045)" baseInstanceName="About{GET}" loadTestItemId="45" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-23296" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/__browserLink/requestData/1e78fbc2dd3d4e6bba2f5b9d360bc5bb----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="1e78fbc2dd3d4e6bba2f5b9d360bc5bb{GET}(043)" baseInstanceName="1e78fbc2dd3d4e6bba2f5b9d360bc5bb{GET}" loadTestItemId="43" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744320" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/__browserLink/requestData/56e8ad8ff96745a083288694e3c1e62b----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="56e8ad8ff96745a083288694e3c1e62b{GET}(047)" baseInstanceName="56e8ad8ff96745a083288694e3c1e62b{GET}" loadTestItemId="47" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-7667712" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/__browserLink/requestData/3fb76b26f2b9410d949406de541acd1e----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="3fb76b26f2b9410d949406de541acd1e{GET}(044)" baseInstanceName="3fb76b26f2b9410d949406de541acd1e{GET}" loadTestItemId="44" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16751616" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest1;Scenario1;http://localhost:1471/__browserLink/requestData/1d8447306314438eae429d58e81f7a77----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="1d8447306314438eae429d58e81f7a77{GET}(046)" baseInstanceName="1d8447306314438eae429d58e81f7a77{GET}" loadTestItemId="46" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16777077" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="true" counterMetadata="WebTest2;Scenario1;http://localhost:1471/Reserved.ReportViewerWebControl.axd----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="Reserved-ReportViewerWebControl-axd{GET}(039)" baseInstanceName="Reserved-ReportViewerWebControl-axd{GET}" loadTestItemId="39" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16741493" lineStyle="0" fixedRange="2" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest2;Scenario1;http://localhost:1471/__browserLink/requestData/34c654b59a254e6097083115b9f73598----{GET}">
                  <CounterDescriptor machineName="D4RK" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="34c654b59a254e6097083115b9f73598{GET}(048)" baseInstanceName="34c654b59a254e6097083115b9f73598{GET}" loadTestItemId="48" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
          </GraphDescriptors>
        </LoadTestRunDescriptor>
      </AnalyzerViewState>
      <Summary>
        <PerformanceCounterResults>
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="D4RK" categoryName="LoadTest:Scenario" counterName="User Load" instanceName="_Total" value="25" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="D4RK" categoryName="LoadTest:Test" counterName="Total Tests" instanceName="_Total" value="1070" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="D4RK" categoryName="LoadTest:Test" counterName="Failed Tests" instanceName="_Total" value="641" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="D4RK" categoryName="LoadTest:Test" counterName="Tests/Sec" instanceName="_Total" value="1.7833333" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="D4RK" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="_Total" value="13.7135134" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="D4RK" categoryName="LoadTest:Request" counterName="Total Requests" instanceName="_Total" value="28602" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="D4RK" categoryName="LoadTest:Request" counterName="Failed Requests" instanceName="_Total" value="3784" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="D4RK" categoryName="LoadTest:Request" counterName="Cached Requests" instanceName="_Total" value="19291" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="D4RK" categoryName="LoadTest:Request" counterName="Requests/Sec" instanceName="_Total" value="47.67" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="D4RK" categoryName="LoadTest:Request" counterName="Avg. Response Time" instanceName="_Total" value="0.007865778" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Processor" counterName="% Processor Time" instanceName="_Total" value="24.3774357" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="true" machineName="D4RK" categoryName="Memory" counterName="Available MBytes" instanceName="-" value="1384" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Network Interface" counterName="Bytes Received/sec" instanceName="isatap.{02482c13-6a2e-45a3-8a10-314f4ba54b91}" value="0" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Network Interface" counterName="Bytes Received/sec" instanceName="teredo tunneling pseudo-interface" value="0" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Network Interface" counterName="Bytes Received/sec" instanceName="broadcom 802.11ac network adapter" value="23339.2383" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Network Interface" counterName="Bytes Sent/sec" instanceName="isatap.{02482c13-6a2e-45a3-8a10-314f4ba54b91}" value="0" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Network Interface" counterName="Bytes Sent/sec" instanceName="teredo tunneling pseudo-interface" value="1.54006279" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="D4RK" categoryName="Network Interface" counterName="Bytes Sent/sec" instanceName="broadcom 802.11ac network adapter" value="6117.05762" />
        </PerformanceCounterResults>
        <PageSummaries>
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="localhost:1471/{GET}" pageCount="228" responseTime="51" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="negotiate{POST}" pageCount="894" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="Login{GET}" pageCount="227" responseTime="23" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="connect{GET}" pageCount="666" responseTime="0" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="4f296221a2d64383ab6e832bb45edf37{GET}" pageCount="227" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="abort{POST}" pageCount="666" responseTime="0" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="localhost:1471/{GET}" pageCount="452" responseTime="34" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="negotiate{POST}" pageCount="1348" responseTime="0" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="Login{GET}" pageCount="228" responseTime="22" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="connect{GET}" pageCount="896" responseTime="0" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="f9a22a699fa748158ff594ad10783902{GET}" pageCount="228" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="abort{POST}" pageCount="896" responseTime="0" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="Login{POST}" pageCount="224" responseTime="74" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="d6f1d1cc10b548838b3bc75f0aa33d48{GET}" pageCount="224" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="Login{POST}" pageCount="223" responseTime="54" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="91a3a18d323148aaa9d0bad031dde165{GET}" pageCount="223" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="TrailUsageReport.aspx{GET}" pageCount="216" responseTime="132" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="a2c294c2e0024cf98a134891b5abd0fe{GET}" pageCount="216" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="About{GET}" pageCount="444" responseTime="17" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="1e78fbc2dd3d4e6bba2f5b9d360bc5bb{GET}" pageCount="222" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="56e8ad8ff96745a083288694e3c1e62b{GET}" pageCount="222" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="3fb76b26f2b9410d949406de541acd1e{GET}" pageCount="222" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest1" url="1d8447306314438eae429d58e81f7a77{GET}" pageCount="222" responseTime="1" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="Reserved.ReportViewerWebControl.axd{GET}" pageCount="432" responseTime="80" />
          <PageSummary scenarioName="Scenario1" testName="WebTest2" url="34c654b59a254e6097083115b9f73598{GET}" pageCount="216" responseTime="2" />
        </PageSummaries>
        <TestSummaries>
          <TestSummary scenarioName="Scenario1" testName="WebTest2" totalTests="216" testsFailed="216" averageDuration="24345" />
          <TestSummary scenarioName="Scenario1" testName="WebTest1" totalTests="222" testsFailed="222" averageDuration="18944" />
          <TestSummary scenarioName="Scenario1" testName="TestMethod1" totalTests="217" testsFailed="0" averageDuration="0" />
          <TestSummary scenarioName="Scenario1" testName="IndexTest" totalTests="212" testsFailed="0" averageDuration="3" />
          <TestSummary scenarioName="Scenario1" testName="CodedUITestMethod1" totalTests="203" testsFailed="203" averageDuration="25656" />
        </TestSummaries>
      </Summary>
    </LoadTestResult>
  </Results>
</TestRun>